{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Json1",
						"type": "DatasetReference"
					},
					"name": "WeatherData",
					"description": "Import Weather data from bronze/weather"
				},
				{
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "flatten1"
				},
				{
					"name": "derivedColumn1",
					"description": "Timestamp Correction"
				},
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn2"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine',",
				"     wildcardPaths:['/*.json']) ~> WeatherData",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false) ~> source1",
				"WeatherData foldDown(unroll(),",
				"     mapColumn(",
				"          each(match(calctime),",
				"               calctime = $$),",
				"          each(match(city_id),",
				"               city_id = $$),",
				"          each(match(cnt),",
				"               cnt = $$),",
				"          each(match(cod),",
				"               cod = $$),",
				"          each(match(message),",
				"               message = $$),",
				"          each(match(list.clouds.all),",
				"               clouds.all = $$),",
				"          each(match(list.dt),",
				"               timestamp = $$),",
				"          each(match(list.main.feels_like),",
				"               feels_like = $$),",
				"          each(match(list.main.humidity),",
				"               humidity = $$),",
				"          each(match(list.main.pressure),",
				"               pressure = $$),",
				"          each(match(list.main.temp),",
				"               temp = $$),",
				"          each(match(list.main.temp_max),",
				"               temp_max = $$),",
				"          each(match(list.main.temp_min),",
				"               temp_min = $$),",
				"          each(match(list.weather.description),",
				"               weather_description = $$),",
				"          each(match(list.weather.icon),",
				"               weather_icon = $$),",
				"          each(match(list.weather.id),",
				"               weather_id = $$),",
				"          each(match(list.weather.main),",
				"               weather_main = $$),",
				"          each(match(list.wind.deg),",
				"               wind_deg = $$),",
				"          each(match(list.wind.gust),",
				"               wind_gust = $$),",
				"          each(match(list.wind.speed),",
				"               wind_speed = $$)",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"flatten1 derive(corrected_timestamp = iif(length(timestamp)>10, null(), timestamp),",
				"          location = 'Boston') ~> derivedColumn1",
				"derivedColumn1 filter(and(",
				"    !isNull(temperature), ",
				"    !isNull(humidity), ",
				"    !isNull(timestamp), ",
				"    isNull(corrected_timestamp)",
				")",
				") ~> filter1",
				"filter1 derive() ~> derivedColumn2"
			]
		}
	}
}